1
00:00:01,312 --> 00:00:03,951
So we have a tumbling asteroid hazard
我们有会翻转的小行星

2
00:00:03,951 --> 00:00:06,854
and we can destroy it with our laser bolts.
我们可以用镭射子弹消灭它

3
00:00:06,854 --> 00:00:09,738
But the entire process seems a bit dull.
但这个过程似乎有点无聊

4
00:00:09,738 --> 00:00:12,578
So let's add some explosions to brighten things up.
让我们加点爆炸的效果进来

5
00:00:13,907 --> 00:00:16,957
Let's open our DestroyByContact script.
打开DestroyByContact脚本

6
00:00:19,736 --> 00:00:22,098
The first thing we need to do is add a reference
首先我们要做的是增加对

7
00:00:22,098 --> 00:00:24,486
to our explosion visual effect.
爆炸效果的引用

8
00:00:24,486 --> 00:00:28,652
So let's write public GameObject explosion
所以敲下代码public GameObject explosion

9
00:00:29,483 --> 00:00:33,062
then after our boundary detection code
然后在边界检测代码后面

10
00:00:33,062 --> 00:00:35,117
write instantiate.
键入instantiate

11
00:00:35,617 --> 00:00:37,617
We know instantiate, we've used it in
我们在之前的Player Controller脚本里面

12
00:00:37,617 --> 00:00:39,617
our Player Controller script.
用过instantiate

13
00:00:40,283 --> 00:00:42,283
Let's open our Player Controller script.
让我们打开Player Controller这个脚本

14
00:00:43,764 --> 00:00:46,366
And copy the instantiate line.
然后复制instantiate的那行代码

15
00:00:47,977 --> 00:00:51,296
Paste it in to our DestroyByContact script.
粘贴到DestroyByContact脚本中

16
00:00:52,086 --> 00:00:54,086
What do we want to instantiate?
我们要实例化什么呢?

17
00:00:54,586 --> 00:00:56,074
Our explosion.
我们的爆炸

18
00:00:56,574 --> 00:00:58,505
Where do we want to instantiate it?
在哪个位置实例化呢?

19
00:00:58,505 --> 00:01:01,917
At our transform position with our
在我们变形组件提供的参数的位置

20
00:01:01,917 --> 00:01:03,917
transform rotation applied.
将爆炸实例化

21
00:01:04,417 --> 00:01:06,529
This will instantiate the explosion
也就是说在我们小行星

22
00:01:06,529 --> 00:01:09,542
at the exact same position as our asteroid.
所在的位置实例化爆炸

23
00:01:10,525 --> 00:01:13,351
Save this script and return to Unity.
保存这个脚本回到Unity

24
00:01:14,434 --> 00:01:18,382
In the Prefabs folder is VFX Explosions.
在Prefabs文件夹中找到VFX -> Explosions

25
00:01:19,352 --> 00:01:21,629
Drag the explosion_asteroid on to the
把explosion_asteroid拖拽到

26
00:01:21,629 --> 00:01:24,097
Explosion slot to create a reference to it
DestroyByContact脚本中

27
00:01:24,097 --> 00:01:26,719
on our DestroyByContact script.
Explosion槽的位置

28
00:01:27,467 --> 00:01:30,037
Save the scene and enter Play mode.x
保存场景进入到游戏模式

29
00:01:31,583 --> 00:01:33,486
Now when we destroy the asteroid we get a
现在如果消灭了小行星

30
00:01:33,486 --> 00:01:35,238
very pretty explosion.
我们会看到一个漂亮的爆炸

31
00:01:35,238 --> 00:01:37,238
Let's see that again.
让我们再看一次

32
00:01:40,128 --> 00:01:41,363
Nice.
太帅了

33
00:01:42,421 --> 00:01:43,906
On the other hand
从另一角度来说

34
00:01:44,503 --> 00:01:46,931
If we ram the asteroid with our ship
如果拿玩家飞船撞击小行星

35
00:01:48,315 --> 00:01:50,315
We only get that same explosion.
我们会得到一样的爆炸

36
00:01:50,732 --> 00:01:52,732
Now that's a little sad.
这看起来有点弱

37
00:01:52,732 --> 00:01:55,230
Let's improve this script to accommodate
我们把脚本改良一下

38
00:01:55,230 --> 00:01:57,465
the player as a special case and include
让玩家爆炸成为一个特例

39
00:01:57,465 --> 00:01:58,907
a player explosion as well as
并像导入小行星爆炸

40
00:01:58,907 --> 00:02:00,907
the asteroid explosion.
那样导入玩家爆炸

41
00:02:02,401 --> 00:02:05,403
Return to our DestroyByContact script.
回到DestroyByContact脚本

42
00:02:06,199 --> 00:02:08,790
Let's add a public GameObject reference
让我们给玩家爆炸

43
00:02:08,790 --> 00:02:10,790
to our playerExplosion.
增加一个引用

44
00:02:12,367 --> 00:02:15,051
Then let's duplicate our instantiate code
把实例化的代码复制一下

45
00:02:15,827 --> 00:02:18,835
and again, what do we want to instantiate?
重复一遍,我们需要实例化什么?

46
00:02:18,835 --> 00:02:20,890
Our playerExplosion.
玩家飞船的爆炸

47
00:02:20,890 --> 00:02:23,363
And where do we want to instantiate it?
在哪里实力化?

48
00:02:23,970 --> 00:02:26,607
Where our player, as the other collider
在我们玩家飞船的位置

49
00:02:26,607 --> 00:02:30,405
is in our scene, or the Other
当玩家飞船作为

50
00:02:30,405 --> 00:02:32,765
transform position and the Other
另一个对象碰到了小行星

51
00:02:32,765 --> 00:02:34,375
transform rotation.
我们飞船的位置引爆

52
00:02:35,127 --> 00:02:37,127
Leaving the code like this would simply
这段代码

53
00:02:37,127 --> 00:02:39,127
instantiate 2 explosions with every
如果被触发了

54
00:02:39,127 --> 00:02:40,811
OnTriggerEnter event.
会实例化2个爆炸的效果

55
00:02:41,282 --> 00:02:43,899
Let's test the Other collider again.
让我们再检测一下撞击对象

56
00:02:43,899 --> 00:02:46,718
Indent the new instantiate code and write
把新的实例化代码缩进一下

57
00:02:47,619 --> 00:02:51,261
If the other collider's tag is the
如果另一个碰撞对象的标签

58
00:02:51,261 --> 00:02:53,261
same as Player
是玩家

59
00:02:53,968 --> 00:02:55,692
and add an open bracket.
加上大括号

60
00:02:56,385 --> 00:02:58,605
And after the instantiate line we will
在这段实例化代码后面

61
00:02:58,605 --> 00:03:01,512
need to complete this with a close bracket.
我们需要大括号结束

62
00:03:02,896 --> 00:03:05,901
We will now always instantiate our explosions
我们总会发生爆炸效果

63
00:03:05,901 --> 00:03:08,523
but if we collide with an object tagged Player
但是如果爆炸的另一个对象的标签

64
00:03:08,523 --> 00:03:10,486
we will also instantiate a player
是玩家

65
00:03:10,486 --> 00:03:11,851
explosion as well.
我们将会多实例化一个玩家爆炸

66
00:03:12,516 --> 00:03:15,295
Save this script and return to Unity.
保存脚本回到Unity

67
00:03:16,176 --> 00:03:18,023
Our player now needs a tag.
我们的玩家现在需要一个标签

68
00:03:18,455 --> 00:03:20,455
Using the Tag drop-down menu select the
打开标签的下拉菜单选择

69
00:03:20,455 --> 00:03:22,788
pre-made tag Player.
已经预制的标签Player

70
00:03:23,468 --> 00:03:26,758
There is no need to create a custom tag in this case.
这里不需要我们自定一个标签

71
00:03:27,797 --> 00:03:29,797
Select the Asteroid game object
选定小行星对象

72
00:03:29,797 --> 00:03:32,401
and drag the explosion_player on to the
把explosion_player这个爆炸效果拖拽

73
00:03:32,401 --> 00:03:34,304
Player Explosion slot on the
到DestroyByContact组件的

74
00:03:34,304 --> 00:03:36,304
DestroyByContact component.
Player Explosion槽

75
00:03:36,956 --> 00:03:39,343
Save the scene and play.
保存场景进入到游戏模式

76
00:03:41,445 --> 00:03:43,445
Wow, that's great.
哇,这回太酷了

77
00:03:44,346 --> 00:03:46,346
The last improvement we need to make on the
我们最后要改进的内容是

78
00:03:46,346 --> 00:03:48,969
asteroid is to get it moving towards the player
小行星最好能朝玩家飞过来

79
00:03:49,785 --> 00:03:51,840
With the Asteroid selected
选定小行星

80
00:03:51,840 --> 00:03:53,977
open the Scripts folder and drag the
打开Scripts文件夹

81
00:03:53,977 --> 00:03:56,281
Mover script on to the Asteroid
把Mover这个脚本拖拽到

82
00:03:56,281 --> 00:03:58,281
game object in the Inspector.
小行星的这个查看器窗口

83
00:03:58,698 --> 00:04:00,698
The Mover script is the movement
Mover这个脚本

84
00:04:00,698 --> 00:04:02,698
code we created when we were moving the bolt
是我们之前学习中做过的

85
00:04:02,698 --> 00:04:05,324
game object in an earlier assignment.
让子弹向上飞的脚本

86
00:04:06,289 --> 00:04:10,410
Then set the speed value to -5.
这里把脚本中speed值设定为-5

87
00:04:11,159 --> 00:04:13,159
This negative speed will bring the asteroid
这个反方向的速度将使

88
00:04:13,159 --> 00:04:15,159
down the screen towards our player.
小行星从上向下朝玩家飞船飞过来

89
00:04:16,543 --> 00:04:19,810
Save the scene, enter Play mode and test.
保存场景进入游戏模式测试一下

90
00:04:20,434 --> 00:04:22,782
And the asteroid tumbles towards our player.
小行星翻转着朝我们的玩家飞过来

91
00:04:23,514 --> 00:04:25,986
Conveniently the boundary also takes care
我们的边界会

92
00:04:25,986 --> 00:04:27,986
of the asteroid when it leaves the boundary's
销毁离开边界的小行星

93
00:04:27,986 --> 00:04:29,986
box by destroying it.
这点很方便

94
00:04:31,163 --> 00:04:33,163
Exit Play mode.
退出游戏模式

95
00:04:33,994 --> 00:04:35,953
The asteroid hazard is done.
小行星制造的灾难已经做好了

96
00:04:35,953 --> 00:04:38,339
We need to save this as a prefab
我们把这个保存成预制件

97
00:04:38,339 --> 00:04:40,339
So drag the asteroid game object from the
把小行星这个游戏对象拖拽到

98
00:04:40,339 --> 00:04:43,940
Hierarchy on to the Prefabs folder in Assets.
Assets目录下的Prefabs文件夹中

99
00:04:44,964 --> 00:04:46,964
This creates a new prefab of our
我们这样就做好了一个

100
00:04:46,964 --> 00:04:48,964
Asteroid game object.
小行星对象的预制件

101
00:04:49,878 --> 00:04:51,878
Lastly delete the instance of
最后让我们把场景

102
00:04:51,878 --> 00:04:53,878
the asteroid from our scene.
中的小行星删除

103
00:04:54,544 --> 00:04:57,789
Our asteroid hazard is setup and ready to go.
我们小行星灾难已经设定好了

104
00:04:57,789 --> 00:04:59,664
In the next assignment we will create
下一项任务是

105
00:04:59,664 --> 00:05:01,664
our game controller.
编写我们游戏控制器