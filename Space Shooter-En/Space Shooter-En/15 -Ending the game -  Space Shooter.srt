1
00:00:01,657 --> 00:00:04,544
We have developed a simple but playable game.
我们开发了一个简单好玩的游戏

2
00:00:04,544 --> 00:00:06,544
Now we need to find a way to break out
现在我们需要中断我们的

3
00:00:06,544 --> 00:00:08,544
of our infinite loop spawning our waves
产生小行星的无尽循环

4
00:00:08,544 --> 00:00:11,963
of hazards, end the game when the player is destroyed
当玩家被击毁的时候结束游戏

5
00:00:11,963 --> 00:00:13,963
and give our players the chance to
允许玩家

6
00:00:13,963 --> 00:00:16,341
restart a new game if they want to.
重新开始游戏

7
00:00:17,278 --> 00:00:19,278
As we prepare to end the game
我们准备结束游戏

8
00:00:19,278 --> 00:00:21,793
we need to create 2 new labels.
我们需要2个新标签

9
00:00:22,192 --> 00:00:24,357
1 to display Game Over
一个显示游戏结束

10
00:00:24,357 --> 00:00:26,538
and the other to indicate when it's
另一个告知

11
00:00:26,538 --> 00:00:28,538
okay to restart the game.
什么时候游戏可以重新开始

12
00:00:29,646 --> 00:00:32,688
In an effort to keep our Hierarchy organised
为了让我们的层级组织更有效

13
00:00:32,688 --> 00:00:35,540
let's create an empty parent game object
让我们新建一个父对象

14
00:00:35,540 --> 00:00:37,775
to hold our current Score Text
来保存我们现有的得分文本

15
00:00:37,775 --> 00:00:40,516
and the 2 new labels we are about to create.
和2个新的将要建立的文本

16
00:00:41,725 --> 00:00:44,425
Rename the game object DisplayText
将父类改名为DisplayText(显示文本)

17
00:00:44,425 --> 00:00:47,415
and reset the game object's transform.
将这个对象的位移重置一下

18
00:00:48,854 --> 00:00:51,554
Add Score Text to DisplayText
把Score Text拖拽到DisplayText上

19
00:00:51,554 --> 00:00:54,698
making Score Text a child of DisplayText.
让其成为DisplayText的子节点

20
00:00:55,750 --> 00:00:59,421
Next create a new GUI text game object.
然后再新建一个GUI text对象

21
00:01:00,308 --> 00:01:02,826
Rename it Restart Text
(5.0以后的版本请选择UI -> Text代替GUI Text)

22
00:01:02,826 --> 00:01:05,197
and change the text property to
重命名为Restart Text

23
00:01:05,197 --> 00:01:07,197
Restart Text.
并更改文本属性为Restart Text

24
00:01:08,084 --> 00:01:10,556
Change the transform position to 
把位置组件改为

25
00:01:10,556 --> 00:01:13,541
(1, 1) on the X and Y.
X和Y分别为(1, 1)

26
00:01:13,541 --> 00:01:15,804
This should place the restart text
这样restart text文本应该

27
00:01:15,804 --> 00:01:17,804
up in to the upper right corner.
就会出现在右上方

28
00:01:18,622 --> 00:01:20,272
But we can't see it.
但是我们看不到它

29
00:01:20,901 --> 00:01:23,055
By adjusting the transform's position
我们可以通过更改transform组件的

30
00:01:23,055 --> 00:01:26,649
on the X axis we can drag Restart Text
position属性的X方向的值把Restart Text

31
00:01:26,649 --> 00:01:28,649
back in to the game screen.
文本拖拽回游戏屏幕

32
00:01:29,190 --> 00:01:31,789
But again using the transform component
但是再重新说一遍使用transform组件来

33
00:01:31,789 --> 00:01:33,789
for adjusting this fine detail on the GUI
实现对文本位置的微调

34
00:01:33,789 --> 00:01:36,067
text label is not ideal.
不是一个好注意

35
00:01:36,676 --> 00:01:40,556
Let's leave the transform position X at 1.
让我们把X方向上的位移值保持为1

36
00:01:41,678 --> 00:01:43,912
There are 2 adjustments that we can make
这里还有2个地方的设置

37
00:01:43,912 --> 00:01:46,533
in the GUI text component to better display
可以让我们更好的显示

38
00:01:46,533 --> 00:01:48,533
our Restart Text label.
我们的Restart Text标签

39
00:01:49,364 --> 00:01:52,076
The first is our anchor and alignment.
第一处设置就是锚定和调整

40
00:01:52,576 --> 00:01:54,576
Currently these are set at default
目前这些设置都是使用默认的

41
00:01:54,576 --> 00:01:56,842
or upper left and left.
左上和左

42
00:01:57,228 --> 00:02:00,024
This is why we cannot see our label.
这就是我们看不到我们文本标签的原因

43
00:02:00,024 --> 00:02:02,588
The label is starting at the upper right
这个标签是在右上角的位置

44
00:02:02,588 --> 00:02:05,256
of our screen and is drawn to the right
并且从右上角的右侧从左往右

45
00:02:05,256 --> 00:02:06,564
from the left.
绘制标签文字

46
00:02:06,564 --> 00:02:09,134
So the label draws off the screen.
所以这个文本被画在了屏幕外面

47
00:02:09,644 --> 00:02:11,588
Change the anchor and alignment properties
把锚定和调整属性改为

48
00:02:11,588 --> 00:02:13,143
to upper right
右上

49
00:02:14,944 --> 00:02:16,240
and right.
右

50
00:02:17,872 --> 00:02:20,203
We can see our Restart Text label
这下我们看到Restart Text的文本标签

51
00:02:20,203 --> 00:02:22,650
now draws to the left from the right
在右上角

52
00:02:22,650 --> 00:02:24,845
starting in the upper right corner.
已经从右往左绘制了

53
00:02:25,896 --> 00:02:29,189
The second adjustment is to the pixel offset.
第二处需要变更的地方就是像素偏移

54
00:02:29,189 --> 00:02:31,314
Let's match the pixel offset
让我们把Restart Text像素偏移

55
00:02:31,314 --> 00:02:34,804
on Restart Text to that of Score Text.
设置成与Score Text(得分文本)匹配的格式

56
00:02:35,304 --> 00:02:37,695
We can have the same 10 pixel pad
我们选择10个像素的空间

57
00:02:37,695 --> 00:02:40,093
by setting the pixel offset to
这就是说像素偏移的值设定为

58
00:02:40,093 --> 00:02:42,463
-10 and -10.
-10 和 -10

59
00:02:44,402 --> 00:02:47,206
Add Restart Text to DisplayText
把Restart Text这个文本对象也拖拽到

60
00:02:47,206 --> 00:02:49,741
to keep our Hierarchy neat and tidy.
DisplayText里保持我们的层级结构整齐干净

61
00:02:51,018 --> 00:02:53,491
Create another GUI text object.
再新建一个GUI text对象

62
00:02:55,479 --> 00:02:58,188
And rename this one Game Over Text.
重命名为Game Over文本

63
00:02:59,346 --> 00:03:02,405
Change the text property to Game Over Text.
把文本的属性改为Game Over Text

64
00:03:03,582 --> 00:03:05,582
Change the anchor and alignment to
把锚定和调整

65
00:03:05,582 --> 00:03:07,170
middle centre
改为中部中心

66
00:03:08,275 --> 00:03:09,654
and centre.
和中心

67
00:03:10,416 --> 00:03:13,120
And change the transform's position Y
将transform的position的Y属性设置为

68
00:03:13,120 --> 00:03:14,745
to 0.6
0.6

69
00:03:14,745 --> 00:03:17,940
so it is in the middle of our screen but up a bit.
这样它就在屏幕的中心稍微靠上一点

70
00:03:19,075 --> 00:03:21,503
Now add Game Over Text
现在再把Game Over Text文本

71
00:03:21,503 --> 00:03:24,119
to our Display Text parent game object.
拖拽到我们的Display Text父类中

72
00:03:25,067 --> 00:03:27,329
This sets up the basic GUI text objects
这下所有需要用来结束游戏的

73
00:03:27,329 --> 00:03:29,718
that we will need to end our game.
文本都已经准备好了

74
00:03:31,031 --> 00:03:33,392
Next we need to update our code
下一步我们需要更新我们

75
00:03:33,392 --> 00:03:35,671
on our GameController script.
GameController脚本中的代码

76
00:03:35,671 --> 00:03:38,828
Open our GameController script for editing.
打开GameController脚本并编辑

77
00:03:40,253 --> 00:03:42,516
We need to create references to our new
我们需要新建一些对刚才建好的文本

78
00:03:42,516 --> 00:03:44,739
GUI text components.
的引用

79
00:03:44,739 --> 00:03:49,116
Write public GUIText restartText
敲入代码public GUIText restartText

80
00:03:49,116 --> 00:03:53,266
and public GUIText gameOverText.
和public GUIText gameOverText

81
00:03:54,111 --> 00:03:56,166
We will feed information to these labels


82
00:03:56,166 --> 00:03:58,166
as the game progresses.

83
00:03:59,094 --> 00:04:01,452
To control what we sent to these 2 labels

84
00:04:01,452 --> 00:04:03,452
and when we send it we will need

85
00:04:03,452 --> 00:04:05,049
2 related control flags,

86
00:04:05,049 --> 00:04:07,379
or 2 boolean variables.

87
00:04:07,879 --> 00:04:12,450
Let's write private bool for boolean gameOver

88
00:04:13,337 --> 00:04:16,277
and private bool restart.

89
00:04:17,329 --> 00:04:19,440
These true-false boolean flags will help

90
00:04:19,440 --> 00:04:21,440
us track when the game is over and

91
00:04:21,440 --> 00:04:23,824
when it is okay to restart the game.

92
00:04:24,437 --> 00:04:26,284
We need to set the value for these at the

93
00:04:26,284 --> 00:04:27,714
start of the game.

94
00:04:27,714 --> 00:04:30,775
So in Start write

95
00:04:30,775 --> 00:04:35,629
gameOver = false and restart = false.

96
00:04:36,088 --> 00:04:38,088
We also need to set the starting text

97
00:04:38,088 --> 00:04:41,010
on our new labels so let's write

98
00:04:41,010 --> 00:04:46,190
restartText.text = ""

99
00:04:47,008 --> 00:04:50,104
The same for gameOverText.text.

100
00:04:50,535 --> 00:04:53,244
Set this to 2 empty quotes as well.

101
00:04:54,168 --> 00:04:56,029
This means at the start of the game

102
00:04:56,029 --> 00:04:58,029
these 2 GUI text labels

103
00:04:58,029 --> 00:04:59,738
will display nothing.

104
00:05:00,238 --> 00:05:02,822
These labels are effectively turned off.

105
00:05:04,865 --> 00:05:07,346
We need to change the state of our game

106
00:05:07,346 --> 00:05:09,346
and the content of these labels when

107
00:05:09,346 --> 00:05:11,038
our game is over.

108
00:05:11,038 --> 00:05:13,038
Much like adding our score we need

109
00:05:13,038 --> 00:05:15,038
to expose a function here

110
00:05:15,038 --> 00:05:17,425
on our game controller for another object

111
00:05:17,425 --> 00:05:19,425
to call when the game is over.

112
00:05:19,828 --> 00:05:22,120
Let's create a new public function we can

113
00:05:22,120 --> 00:05:24,120
call from outside this script.

114
00:05:24,454 --> 00:05:27,766
Write public void GameOver.

115
00:05:28,266 --> 00:05:31,067
Our function will need no parameters.

116
00:05:31,067 --> 00:05:33,647
It simply gets called to end the game.

117
00:05:34,644 --> 00:05:37,631
Our GameOver function is very simple.

118
00:05:37,631 --> 00:05:41,962
First we set our gameOverText.text to 

119
00:05:41,962 --> 00:05:43,194
Game Over!

120
00:05:44,241 --> 00:05:47,391
And then we set our GameOver flag to true.

121
00:05:48,720 --> 00:05:51,297
Now we will use our Game Over flag

122
00:05:51,297 --> 00:05:53,297
to break out of the infinite loop

123
00:05:53,297 --> 00:05:55,297
that spawns our hazards.

124
00:05:56,073 --> 00:05:58,073
The spawn loop is a while loop.

125
00:05:58,421 --> 00:06:00,421
The while loop will continue cycling

126
00:06:00,421 --> 00:06:02,421
through the code it holds until the

127
00:06:02,421 --> 00:06:04,967
statement in the parenthesis is false.

128
00:06:05,322 --> 00:06:08,101
We have set this literally to true

129
00:06:08,101 --> 00:06:11,483
so without help this loop will never end.

130
00:06:12,950 --> 00:06:15,458
At the end of the loop, after we have waited

131
00:06:15,458 --> 00:06:18,013
for our wave to clear, but before we loop back

132
00:06:18,013 --> 00:06:20,013
to the top of our block of code

133
00:06:20,013 --> 00:06:22,329
add if gameOver.

134
00:06:22,898 --> 00:06:24,759
And when written this way we are saying the

135
00:06:24,759 --> 00:06:27,206
same thing as if gameOver is

136
00:06:27,206 --> 00:06:29,206
the same as true

137
00:06:29,206 --> 00:06:32,048
restartText.text equals

138
00:06:32,048 --> 00:06:34,048
Press R for restart.

139
00:06:35,349 --> 00:06:37,349
And again, within a string of text

140
00:06:37,349 --> 00:06:39,474
enclosed by double quotes

141
00:06:39,474 --> 00:06:43,086
note that the R is enclosed by single quotes.

142
00:06:43,876 --> 00:06:46,249
This sets our restart label.

143
00:06:46,249 --> 00:06:50,328
Next set our restart boolean flag to true.

144
00:06:51,242 --> 00:06:54,384
And lastly write break.

145
00:06:54,384 --> 00:06:56,832
This will break us out of our while loop.

146
00:06:56,832 --> 00:06:58,832
And as there is no more code to execute

147
00:06:58,832 --> 00:07:01,414
in spawnWaves after the break

148
00:07:01,414 --> 00:07:04,301
it will end the spawnWaves coroutine.

149
00:07:05,353 --> 00:07:07,465
In our Restart Text label

150
00:07:07,465 --> 00:07:09,465
we have informed our player that they

151
00:07:09,465 --> 00:07:11,299
can restart the game by pressing

152
00:07:11,299 --> 00:07:12,802
the R key.

153
00:07:12,802 --> 00:07:14,802
We will now write the code that allows

154
00:07:14,802 --> 00:07:16,802
the player to do this.

155
00:07:17,965 --> 00:07:20,076
To easily capture a key press

156
00:07:20,076 --> 00:07:22,666
let's poll for it in update.

157
00:07:23,280 --> 00:07:25,654
Write void update

158
00:07:25,654 --> 00:07:28,263
and in the update function write

159
00:07:28,263 --> 00:07:29,943
if restart

160
00:07:29,943 --> 00:07:32,811
so if restart is true we look for our

161
00:07:32,811 --> 00:07:38,905
key press with if Input.GetKeyDown KeyCode.R

162
00:07:40,275 --> 00:07:42,275
Now if restart is true and we get 

163
00:07:42,275 --> 00:07:44,579
the key press on the R key

164
00:07:44,579 --> 00:07:46,844
we reload this scene by using

165
00:07:46,844 --> 00:07:48,844
Application.LoadLevel.

166
00:07:49,385 --> 00:07:52,050
Application.LoadLevel loads the level

167
00:07:52,050 --> 00:07:55,493
or scene file specified in the parenthesis.

168
00:07:55,493 --> 00:07:57,743
Instead of writing a string name

169
00:07:57,743 --> 00:08:00,787
or using an index number for that scene

170
00:08:00,787 --> 00:08:03,737
we will simply use the currently loaded level

171
00:08:03,737 --> 00:08:06,960
by using Application.LoadedLevel

172
00:08:08,289 --> 00:08:10,289
That's it for this script.

173
00:08:10,289 --> 00:08:13,016
Save this script and return to Unity.

174
00:08:14,888 --> 00:08:16,888
We need to set up our new references

175
00:08:16,888 --> 00:08:19,357
that we have written on GameController.

176
00:08:19,830 --> 00:08:21,830
With GameController selected

177
00:08:21,830 --> 00:08:24,548
drag the RestartText game object

178
00:08:24,548 --> 00:08:26,965
on to the Restart Text slot

179
00:08:26,965 --> 00:08:28,965
on the GameController component.

180
00:08:30,100 --> 00:08:32,735
Next drag the GameOver text

181
00:08:32,735 --> 00:08:35,457
game object on to the Game Over text

182
00:08:35,457 --> 00:08:38,444
slot on the GameController component.

183
00:08:40,242 --> 00:08:42,626
We are now done with our game controller.

184
00:08:43,515 --> 00:08:45,919
To end the game we need to call Game Over

185
00:08:45,919 --> 00:08:47,919
on Game Controller when the player

186
00:08:47,919 --> 00:08:49,149
is destroyed.

187
00:08:49,649 --> 00:08:51,470
We could try to detect this on the

188
00:08:51,470 --> 00:08:53,002
player game object,

189
00:08:53,002 --> 00:08:56,042
but we have already written this code somewhere else.

190
00:08:56,652 --> 00:08:59,208
Our AsteroidHazards already detect

191
00:08:59,208 --> 00:09:01,347
collisions with our player.

192
00:09:01,347 --> 00:09:04,390
and that collision destroys the player game object.

193
00:09:05,214 --> 00:09:08,994
Open the DestroyByContact script for editing.

194
00:09:10,585 --> 00:09:12,875
In our DestroyByContact code

195
00:09:12,875 --> 00:09:18,230
we detect if other.tag is the same as Player.

196
00:09:18,675 --> 00:09:22,100
Then before we destroy the player game object

197
00:09:22,100 --> 00:09:24,795
we instantiate the player explosion.

198
00:09:25,526 --> 00:09:27,526
After the line where we spawn the player 

199
00:09:27,526 --> 00:09:30,605
explosion write gameController,

200
00:09:30,605 --> 00:09:32,605
which is the variable holding the reference

201
00:09:32,605 --> 00:09:34,729
to our game controller instance,

202
00:09:34,729 --> 00:09:37,930
and with the dot call the GameOver function

203
00:09:37,930 --> 00:09:39,930
on GameController.

204
00:09:40,430 --> 00:09:42,961
Now when we destroy the player game object

205
00:09:42,961 --> 00:09:44,961
our game controller is told that the

206
00:09:44,961 --> 00:09:46,395
game is over.

207
00:09:46,395 --> 00:09:49,118
Save this script and return to Unity.

208
00:09:50,774 --> 00:09:53,455
Save the scene and enter Play mode.

209
00:10:01,547 --> 00:10:03,547
When the player is destroyed we see the

210
00:10:03,547 --> 00:10:05,005
Game Over label.

211
00:10:05,005 --> 00:10:07,005
When the current wave clears the screen

212
00:10:07,005 --> 00:10:09,453
we can restart by pressing the R key.

213
00:10:10,030 --> 00:10:12,030
And we're playing again.

214
00:10:15,320 --> 00:10:18,456
Note that the game doesn't instantly restart.

215
00:10:18,456 --> 00:10:20,456
Nor can we restart the level for a few moments

216
00:10:20,456 --> 00:10:23,188
while we wait for the screen to clear.

217
00:10:23,188 --> 00:10:25,188
This gives the player a clear sense that

218
00:10:25,188 --> 00:10:27,796
the game is over before restarting the level.

219
00:10:29,276 --> 00:10:31,801
Make sure that we have exited Play mode.

220
00:10:33,088 --> 00:10:35,199
The last step in this assignment is to add

221
00:10:35,199 --> 00:10:37,680
a little more style to our GUI text labels.

222
00:10:38,180 --> 00:10:40,881
We will be using multi-object editing.

223
00:10:40,881 --> 00:10:44,190
Select both Restart Text and Score Text.

224
00:10:44,759 --> 00:10:47,398
These are the labels in the upper corners

225
00:10:47,398 --> 00:10:49,968
and change their font size to 20.

226
00:10:50,730 --> 00:10:53,120
Next select the Game Over text

227
00:10:53,120 --> 00:10:56,091
and set it's font size to 25.

228
00:10:56,091 --> 00:10:58,631
This will make these labels easier to read.

229
00:10:59,407 --> 00:11:01,908
Save the scene and enter Play mode.

230
00:11:25,208 --> 00:11:26,614
Fantastic.

231
00:11:27,114 --> 00:11:28,838
Our game is complete.

232
00:11:28,838 --> 00:11:30,838
In the last assignment we will build the

233
00:11:30,838 --> 00:11:32,767
game as a web player and deploy it

234
00:11:32,767 --> 00:11:34,767
to the web to play.
